TokenBoken - secure and confidential one time service access tokens


Token Service:
==============

Service user (SU) requires a token to access a service (SVC).
Service owner (SO) provides a token to the SU.
SO obtains a token from the token service (TS).

A token is a random byte sequence that is produced by the TS.
Its origin can be proven.
Only the SO can pass it on to the SU in a usable form.

Use Base 64 for transport encoding ...

A token can be used once at the most.
A token is valid for a configurable period (a week, a month),
plus an additional grace period (a day, a week)

                    - * -

Protocol Outline
----------------

(A) TS Access Hand Shake
- SO: the SO accesses the TS root (GET '/')
- TS: the TS returns a base 64 encoded signed NONCE (200 OK)
- SO: the SO validates the NONCE signature
- SO: the SO signs and encodes the NOCNCE and sends it to the TS as a TOKEN request (POST '/')
- TS: the TS decodes the NONCE and verifies the SO signature (to identify the SO)

(B) Token Exchange
- TS: a random byte sequence is generated by the TS
- TS: the TOKEN is signed by the TS with its private key
- TS: the signed token is added to the TS active token storage for the given SO
- TS: the signed TOKEN is encrypted by the TS with the public key of the SO
- TS: the encrypted signed TOKEN is base64 encoded for transport
      and send as body of the response (200 OK)  to the SO TOKEN request
- SO: the encoded encrypted signed TOKEN is base64 decoded 
- SO: the encrypted signed TOKEN is decrypted by the SO with her private key
- SO: the TS signature is verified by the SO using the public key of the TS
- SO: the decrypted verified TOKEN is signed by the SO with her private key
- SO: the signed verified TOKEN is base 64 encoded
- SO: the encoded signed verified TOKEN is passed on to the SU
      as parameter in a link to service
      
(C) Service Access
- SU: the SU provides the signed verified TOKEN when accessing the service
      (GET http://service.example.com?token=TOKEN)
- SVC: the service accesses the TS in order to validate the TOKEN
- TS: the TS verifies the SO signature using the public key of the SO
- TS: the TS verifies that the given TOKEN was produced for the SO
- TS: the TS removes the TOKEN from its active TOKEN storage
- TS:the TS returns OK to the service to indicate that the TOKEN valid
- SVC: the service resumes operation

