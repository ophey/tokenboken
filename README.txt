Token Service:
==============

Service user (SU) requires a token to access a service.
Service provider (SP) provides a token to the SU.
SP obtains a token from the token service (TS).

A token is a random byte sequence that is produced by the TS.
Its origin can be proven.
Only the SP can pass it on to the SU in a usable form.

Use Base 64 for transport encoding ...

(A) TS Access Hand Shake
- SP: the SP accesses the TS root (GET '/')
- TS: the TS returns a base 64 encoded signed NONCE (200 OK)
- SP: the SP validates the NONCE signature
- SP: the SP signes and encode the NOCNCE and sends it to the TS as a TOKEN request (POST '/')
- TS: the TS decodes the NONCE and verifies the SP signature (to identify the SP)

(B) Token Exchange
- TS: a random byte sequence is generated by the TS
- TS: the TOKEN is signed by the TS with its private key
- TS: the signed token is added to the TS active token storage fot the given SP
- TS: the signed TOKEN is encrypted by the TS with the public key of the SP
- TS: the encrypted signed TOKEN is base64 encoded for transport
- SP: the encoded encrypted signed TOKEN is base64 decoded 
- SP: the encrypted signed TOKEN is decrypted by the SP with her private key
- SP: the TS signature is verified by the SP using the public key of the TS
- SP: the decrypted verified TOKEN is signed by the SP with her private key
- SP: the signed verified TOKEN is baase 64 encoded
- SP: the encoded signed verified TOKEN is passed on to the SU

(C) Service Access
- SU: the SU provides the signed verified TOKEN when accessing the service
- SVC: the service accesses the TS in order to validate the TOKEN
- TS: the TS verifies the SP signature using the public key of the SP
- TS: the TS verifies that the given TOKEN was produced for the SP
- TS: the TS removes the TOKEN from its active TOKEN storage
- TS:the TS returns OK to the service to indicate that the TOKEN valid
- SVC: the service resumes operation

